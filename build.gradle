plugins {
    id 'java'
    id "net.minecrell.plugin-yml.paper" version "0.6.0"
}

paper {
    name = "Generated"
    version = "1.0"
    main = "ru.ruha42.generatedblocks.Main"
    apiVersion = "1.21"

    serverDependencies {
        "Vault" {
            load = "BEFORE"
        }
    }
    loader = "ru.ruha42.generatedblocks.ClassLoader"
    generateLibrariesJson = true
}


group = 'ru.ruha42'
version = '1.0'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }

    maven {
        url = 'https://repo.xenondevs.xyz/releases'
    }

    maven { url 'https://jitpack.io' }

}

dependencies {
    compileOnly "io.papermc.paper:paper-api:1.21-R0.1-SNAPSHOT"
    compileOnly annotationProcessor("org.projectlombok:lombok:1.18.34")
    compileOnly "com.github.MilkBowl:VaultAPI:1.7"
    paperLibrary "xyz.xenondevs.invui:invui:1.37"
    paperLibrary "org.spongepowered:configurate-yaml:4.0.0"
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}